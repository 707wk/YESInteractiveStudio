<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADvyFAK78hQSO/IUHPvyFB078hQSe/IUAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO/IUD/vyFDJ78hQ/+/IUP/vyFD/78hQ/+/I
        UMrvyFBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA78hQPu/IUO7vyFD/78hQ++/IULnvyFC478hQ+u/IUP/vyFDw78hQQQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADvyFAL78hQy+/IUP/vyFD/78hQ7wAA
        AAAAAAAA78hQ7O/IUP/vyFD/78hQzu/IUAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADvyFBG78hQ/+/IUPnvyFDq78hQ1gAAAAAAAAAA78hQ1O/IUOrvyFD578hQ/+/I
        UEkAAAAQAAAAOwAAAD8AAAA+AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAPgAAAD63mT2U78hQ/9u4
        ScwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbuEnK78hQ/+C7S3wAAAB2AAAA8QAAAPcAAAD6AAAA+QAA
        APkAAAD5AAAA8wAAAPEAAAD3AAAA+gAAAPlqWSP878hQ/7GUO/0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACukjr978hQ/5+FNa0AAACfAAAA/wAAANYAAAC6AAAAvgAAAL0AAAC+AAAA8AAAAP8AAADSAAAAuQAA
        AL5PQhrP78hQ/+vFT/7duUr/zaxF/AAAAAAAAAAA0rBG9OK9TPrrxU/+78hQ/2RUIqsAAACcAAAA/wAA
        AGAAAAAJAAAACgAAAAkAAAAKAAAAugAAAPcAAABRAAAACQAAAAp4ZCgU7cZPzO/IUP/vyFD/5sBN+QAA
        AAAAAAAA7sdQ7e/IUP/vyFD/wKFA/xURB40AAACcAAAA/wAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAswAA
        APcAAABAAAAAAAAAAAAAAAAA78hQPOnDTvPvyFD/7cZP/e/IULzvyFC778hQ++/IUP/ow071OzEU/wAA
        AIcAAACbAAAA/wAAAH8AAAA3AAAAOwAAADoAAAA7AAAAxwAAAPkAAAB0AAAANwAAADsAAAA7AAAAN1pL
        HqC7nD7/78hQ/+/IUP/vyFD/78hQ/+K9TNRURxyvAAAA/wAAAIYAAACYAAAA/wAAAPQAAADtAAAA7wAA
        AO4AAADvAAAA+wAAAP8AAADzAAAA7AAAAO8AAADvAAAA7QAAAPQHBgP/QTYW+25cJfVuXCX2QzgX8wgH
        A+0AAAD2AAAA/wAAAIQAAACZAAAA/wAAAN8AAADKAAAAzQAAAM0AAADOAAAA8gAAAP4AAADcAAAAygAA
        AM4AAADOAAAAygAAAOAAAAD/AAAA7AAAAMwAAADNAAAAzQAAAMsAAADlAAAA/wAAAIQAAACbAAAA/wAA
        AGAAAAAEAAAACgAAAAoAAAALAAAAuwAAAPgAAABSAAAAAgAAAAsAAAALAAAAAwAAAGYAAAD/AAAAoQAA
        AAcAAAAJAAAACgAAAAMAAAB9AAAA/wAAAIYAAACcAAAA/wAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAtgAA
        APcAAABHAAAAAAAAAAAAAAAAAAAAAAAAAF4AAAD/AAAAmgAAAAAAAAAAAAAAAAAAAAAAAAB0AAAA/wAA
        AIcAAACbAAAA/wAAAGUAAAAKAAAAEQAAABAAAAATAAAAvQAAAPgAAABXAAAACQAAABIAAAASAAAACQAA
        AGsAAAD/AAAAowAAAA0AAAAQAAAAEQAAAAkAAACAAAAA/wAAAIYAAACZAAAA/wAAAOcAAADYAAAA2wAA
        ANsAAADbAAAA9QAAAP4AAADlAAAA2AAAANsAAADbAAAA2AAAAOgAAAD/AAAA8QAAANkAAADbAAAA2wAA
        ANgAAADsAAAA/wAAAIQAAACYAAAA/wAAAO4AAADjAAAA5QAAAOUAAADlAAAA+AAAAP4AAADtAAAA4wAA
        AOUAAADlAAAA4wAAAO8AAAD/AAAA9QAAAOQAAADlAAAA5QAAAOMAAADxAAAA/wAAAIQAAACbAAAA/wAA
        AHcAAAAsAAAALwAAAC8AAAAvAAAAxAAAAPgAAABsAAAALAAAAC8AAAAvAAAALAAAAH0AAAD/AAAArgAA
        AC4AAAAvAAAALwAAACwAAACOAAAA/wAAAIYAAACcAAAA/wAAAE8AAAAAAAAAAAAAAAAAAAAAAAAAswAA
        APcAAABAAAAAAAAAAAAAAAAAAAAAAAAAAFcAAAD/AAAAlgAAAAAAAAAAAAAAAAAAAAAAAABuAAAA/wAA
        AIcAAACcAAAA/wAAAGMAAAAQAAAAEQAAABEAAAARAAAAvAAAAPgAAABWAAAADwAAABEAAAARAAAAEAAA
        AGsAAAD/AAAAowAAABAAAAARAAAAEQAAABAAAAB/AAAA/wAAAIcAAACfAAAA/wAAANwAAADDAAAAxwAA
        AMYAAADHAAAA8gAAAP8AAADYAAAAwwAAAMcAAADHAAAAwwAAAN0AAAD/AAAA7AAAAMUAAADGAAAAxgAA
        AMMAAADjAAAA/wAAAIoAAABwAAAA6wAAAPMAAAD1AAAA9QAAAPUAAAD1AAAA7gAAAOwAAADyAAAA9QAA
        APUAAAD1AAAA9QAAAPEAAADsAAAA7wAAAPUAAAD1AAAA9QAAAPUAAADxAAAA5wAAAGMAAAAMAAAAMAAA
        ADQAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAA
        ADMAAAAzAAAAMwAAADMAAAAzAAAALgAAAAr//gcA//wDAP/4AQD/8GAA//BgAAAB+AAAAfgAAABgAAAA
        YAAeOAAAAAAAAAAAAAAAAAAAAAAAAB48eAAAAAAAAAAAAAAAAAAAAAAAHjx4AAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>